{"version":3,"file":"vehicle_top_up.js","names":["db","require","moment","module","exports","createTopUp","_ref","_asyncToGenerator2","_regenerator","mark","_callee","req","res","_req$body","_req$body$agent_id","agent_id","_req$body$vehicle_id","vehicle_id","_req$body$amount","amount","_req$body$t_date","t_date","_req$body$created_at","created_at","_req$body$updated_at","updated_at","resp","wrap","_callee$","_context","prev","next","body","console","log","sequelize","query","replacements","format","sent","status","json","success","results","t0","error","stop","_x","_x2","apply","arguments","fetchTopUp","_ref2","_callee2","_req$query","_req$query$id","id","_req$query$name","name","_req$query$super_agen","super_agent","_callee2$","_context2","query_type","_x3","_x4"],"sources":["../../src/controllers/vehicle_top_up.js"],"sourcesContent":["// const bcrypt = require ('bcryptjs';)\nconst db = require('../models');\nconst moment = require('moment')\n\nmodule.exports.createTopUp = async (req, res) => {\n   const {\n     agent_id = null,\n     vehicle_id = null,\n     amount =null,\n     t_date = null,\n     created_at=null,\n     updated_at=null\n    } = req.body;\n console.log(req.body)\n  try {\n    const resp = await db.sequelize.query(\n      `CALL vehicle_top_up(\n      :agent_id,\n      :amount,\n      :t_date,\n      :created_at,\n      :updated_at,\n      :vehicle_id\n     )`,\n      {\n        replacements: {\n          agent_id,\n          amount,\n          t_date:moment().format('YYYY-MM-DD'),\n          created_at,\n          updated_at,\n          vehicle_id\n        }\n      }\n    );\n\n    res.status(200).json({ success: true, results: resp });\n  } catch (err) {\n    console.error(err);\n    res.status(500).json({ success: false, error: 'Failed to fetch agent' });\n  }\n};\n\n//  @ Get all superagent\n//  @route GET /superagent \nmodule.exports.fetchTopUp = async (req, res) => {\n  const {\n    id = null,\n    name = null,\n\n    super_agent = null,\n\n  } = req.query;\n\n  try {\n    const resp = await db.sequelize.query(\n      `CALL agents(\n      :id,\n      :name,\n      :super_agent,\n      )`,\n      {\n        replacements: {\n          query_type,\n          id,\n          name,\n       \n          super_agent,\n         \n        }\n      }\n    );\n\n    res.status(200).json({ success: true, results: resp });\n  } catch (err) {\n    console.error(err);\n    res.status(500).json({ success: false, error: 'Failed to fetch agent' });\n  }\n};\n"],"mappings":"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","ignoreList":[]}