{"version":3,"file":"vehicle_owners.js","names":["db","require","module","exports","saveVehicleOwners","req","res","_req$body","body","_req$body$query_type","query_type","_req$body$id","id","_req$body$user_id","user_id","_req$body$name","name","_req$body$address","address","_req$body$phone","phone","_req$body$email","email","_req$body$state","state","_req$body$lga","lga","_req$body$password","password","sequelize","query","replacements","then","resp","status","json","success","data","err","console","error","getVehicleOwners","_req$body2","_req$body2$query_type","_req$body2$id","_req$body2$user_id","_req$body2$name","_req$body2$address","_req$body2$phone","_req$body2$email","_req$body2$state","_req$body2$lga","_req$body2$password"],"sources":["../../src/controllers/vehicle_owners.js"],"sourcesContent":["const db = require('../models');\n\n\nmodule.exports.saveVehicleOwners = (req, res) => {\n    const {\n        query_type = null,\n        id = null,\n        user_id = null,\n        name = null,\n        address = null,\n        phone = null,\n        email = null,\n        state = null,\n        lga = null,\n        password = null,\n    } = req.body\n    db.sequelize.query(`CALL vehicles_owners(\n            :query_type,\n            :id,\n            :user_id,\n            :name,\n            :address,\n            phone,\n            :email,\n            :state,\n            :lga,\n            :password\n        )`, {\n        replacements: {\n            query_type,\n            id,\n            user_id,\n            name,\n            address,\n            phone,\n            email,\n            state,\n            lga,\n            password,\n        }\n    })\n        .then((resp) => {\n            res.status(200).json({ success: true, data: resp });\n        })\n        .catch(err => {\n            console.error(err);\n            res.status(500).json({ success: false, error: 'Operation Failed' });\n        });\n}\n\n\n\n\nmodule.exports.getVehicleOwners = (req, res) => {\n    const {\n        query_type = \"select-all\",\n        id = null,\n        user_id = null,\n        name = null,\n        address = null,\n        phone = null,\n        email = null,\n        state = null,\n        lga = null,\n        password = null,\n    } = req.body\n    db.sequelize.query(`CALL vehicles_owners(\n            :query_type,\n            :id,\n            :user_id,\n            :name,\n            :address,\n            :phone,\n            :email,\n            :state,\n            :lga\n        )`, {\n        replacements: {\n            query_type, \n            id,\n            user_id,\n            name,\n            address,\n            phone,\n            email,\n            state,\n            lga,\n        }\n    })\n        .then((resp) => {\n            res.status(200).json({ success: true, data: resp });\n        })\n        .catch(err => {\n            console.error(err);\n            res.status(500).json({ success: false, error: 'Operation Failed ' });\n        });\n}\n"],"mappings":"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","ignoreList":[]}