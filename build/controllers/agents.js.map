{"version":3,"file":"agents.js","names":["db","require","module","exports","createAgent","_ref","_asyncToGenerator2","_regenerator","mark","_callee","req","res","_req$body","_req$body$query_type","query_type","_req$body$id","id","_req$body$name","name","_req$body$phone","phone","_req$body$email","email","_req$body$address","address","_req$body$super_agent","super_agent","_req$body$state","state","_req$body$lga","lga","resp","wrap","_callee$","_context","prev","next","body","sequelize","query","replacements","sent","status","json","success","results","t0","console","error","stop","_x","_x2","apply","arguments","fetchAgent","_ref2","_callee2","_req$query","_req$query$query_type","_req$query$id","_req$query$name","_req$query$phone","_req$query$email","_req$query$address","_req$query$super_agen","_req$query$state","_req$query$lga","_callee2$","_context2","_x3","_x4"],"sources":["../../src/controllers/agents.js"],"sourcesContent":["// const bcrypt = require ('bcryptjs';)\nconst db = require('../models');\n\nmodule.exports.createAgent = async (req, res) => {\n  const {\n    query_type = 'insert',\n    id = null,\n    name = null,\n    phone = null,\n    email = null,\n    address = null,\n    super_agent = null,\n    state = null,\n    lga = null\n  } = req.body;\n\n  try {\n    const resp = await db.sequelize.query(\n      `CALL agents(\n      :query_type,\n      :id,\n      :name,\n      :phone,\n      :email,\n      :address,\n      :super_agent,\n      :state,\n      :lga)`,\n      {\n        replacements: {\n          query_type,\n          id,\n          name,\n          phone,\n          email,\n          address,\n          super_agent,\n          state,\n          lga\n        }\n      }\n    );\n\n    res.status(200).json({ success: true, results: resp });\n  } catch (err) {\n    console.error(err);\n    res.status(500).json({ success: false, error: 'Failed to fetch agent' });\n  }\n};\n\n//  @ Get all superagent\n//  @route GET /superagent \nmodule.exports.fetchAgent = async (req, res) => {\n  const {\n    query_type = 'select',\n    id = null,\n    name = null,\n    phone = null,\n    email = null,\n    address = null,\n    super_agent = null,\n    state = null,\n    lga = null\n  } = req.query;\n\n  try {\n    const resp = await db.sequelize.query(\n      `CALL agents(\n      :query_type,\n      :id,\n      :name,\n      :phone,\n      :email,\n      :address,\n      :super_agent,\n      :state,\n      :lga)`,\n      {\n        replacements: {\n          query_type,\n          id,\n          name,\n          phone,\n          email,\n          address,\n          super_agent,\n          state,\n          lga\n        }\n      }\n    );\n\n    res.status(200).json({ success: true, results: resp });\n  } catch (err) {\n    console.error(err);\n    res.status(500).json({ success: false, error: 'Failed to fetch agent' });\n  }\n};\n"],"mappings":"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","ignoreList":[]}