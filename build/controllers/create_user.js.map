{"version":3,"file":"create_user.js","names":["db","require","module","exports","create_user","req","res","_req$body","body","_req$body$id","id","_req$body$vehicle_id","vehicle_id","_req$body$name","name","_req$body$middle_name","middle_name","_req$body$surname","surname","_req$body$gender","gender","_req$body$status","status","_req$body$nationality","nationality","_req$body$state_of_or","state_of_origin","_req$body$lg","lg","_req$body$date_of_bir","date_of_birth","_req$body$place_of_bi","place_of_birth","_req$body$phone_no","phone_no","_req$body$blood_group","blood_group","_req$body$genotype","genotype","_req$body$address","address","_req$body$NIN_number","NIN_number","_req$body$next_of_kin","next_of_king","_req$body$next_of_kin2","next_of_king_address","_req$body$phone_no2","phone_no2","_req$body$plate_numbe","plate_number","_req$body$classes_num","classes_number","_req$body$side_number","side_number","_req$body$phone_no3","phone_no3","_req$body$name_of_com","name_of_company","_req$body$qrcode","qrcode","_req$query$query_type","query","query_type","sequelize","replacements","then","results","json","success","err","console","log","getCreate_user","_req$query","_req$query$id","_req$query$vehicle_id","_req$query$name","_req$query$middle_nam","_req$query$surname","_req$query$gender","_req$query$status","_req$query$nationalit","_req$query$state_of_o","_req$query$lg","_req$query$date_of_bi","_req$query$place_of_b","_req$query$phone_no","_req$query$blood_grou","_req$query$genotype","_req$query$address","_req$query$NIN_number","_req$query$next_of_ki","_req$query$next_of_ki2","_req$query$phone_no2","_req$query$plate_numb","_req$query$classes_nu","_req$query$side_numbe","_req$query$phone_no3","_req$query$name_of_co","_req$query$qrcode","_req$query$query_type2","state_and_local_gvt","_req$body2","_req$body2$type","type","_req$body2$state","state","_req$body2$local_gvt","local_gvt","_req$query$query_type3"],"sources":["../../src/controllers/create_user.js"],"sourcesContent":["const db = require(\"../models\");\n\nmodule.exports.create_user = (req, res) => {\n  // const {  } = req.body;\n  const {\n    id = null,\n    vehicle_id = null,\n    name = null,\n    middle_name = null,\n    surname = null,\n    gender = null,\n    status = null,\n    nationality = null,\n    state_of_origin = null,\n    lg = null,\n    date_of_birth = null,\n    place_of_birth = null,\n    phone_no = null,\n    blood_group = null,\n    genotype = null,\n    address = null,\n    NIN_number = null,\n    next_of_king = null,\n    next_of_king_address = null,\n    phone_no2 = null,\n    plate_number = null,\n    classes_number = null,\n    side_number = null,\n    phone_no3 = null,\n    name_of_company = null,\n    qrcode = null,\n  } = req.body;\n  const { query_type = \"create\" } = req.query;\n  db.sequelize\n    .query(\n      `call create_user(:id,:vehicle_id,:query_type,:name,:middle_name,:surname,:gender,:status,:nationality,:state_of_origin,:lg,:date_of_birth,:place_of_birth,:phone_no,:blood_group,:genotype,:address,:NIN_number,:next_of_king,:next_of_king_address,:phone_no2,:plate_number,:classes_number,:side_number,:phone_no3,:name_of_company,:qrcode)`,\n      {\n        replacements: {\n          id,\n          vehicle_id,\n          query_type,\n          name,\n          middle_name,\n          surname,\n          gender,\n          status,\n          nationality,\n          state_of_origin,\n          lg,\n          date_of_birth,\n          place_of_birth,\n          phone_no,\n          blood_group,\n          genotype,\n          address,\n          NIN_number,\n          next_of_king,\n          next_of_king_address,\n          phone_no2,\n          plate_number,\n          classes_number,\n          side_number,\n          phone_no3,\n          name_of_company,\n          qrcode,\n        },\n      }\n    )\n    .then((results) => res.json({ success: true, results }))\n    .catch((err) => {\n      console.log(err);\n      res.status(500).json({ success: false });\n    });\n};\n\nmodule.exports.getCreate_user = (req, res) => {\n  // const {  } = req.body;\n  const {\n    id = null,\n    vehicle_id = null,\n    name = null,\n    middle_name = null,\n    surname = null,\n    gender = null,\n    status = null,\n    nationality = null,\n    state_of_origin = null,\n    lg = null,\n    date_of_birth = null,\n    place_of_birth = null,\n    phone_no = null,\n    blood_group = null,\n    genotype = null,\n    address = null,\n    NIN_number = null,\n    next_of_king = null,\n    next_of_king_address = null,\n    phone_no2 = null,\n    plate_number = null,\n    classes_number = null,\n    side_number = null,\n    phone_no3 = null,\n    name_of_company = null,\n    qrcode = null,\n  } = req.query;\n  const { query_type = \"create\" } = req.query;\n  db.sequelize\n    .query(\n      `call create_user(:id,:vehicle_id,:query_type,:name,:middle_name,:surname,:gender,:status,:nationality,:state_of_origin,:lg,:date_of_birth,:place_of_birth,:phone_no,:blood_group,:genotype,:address,:NIN_number,:next_of_king,:next_of_king_address,:phone_no2,:plate_number,:classes_number,:side_number,:phone_no3,:name_of_company,:qrcode)`,\n      {\n        replacements: {\n          id,\n          vehicle_id,\n          query_type,\n          name,\n          middle_name,\n          surname,\n          gender,\n          status,\n          nationality,\n          state_of_origin,\n          lg,\n          date_of_birth,\n          place_of_birth,\n          phone_no,\n          blood_group,\n          genotype,\n          address,\n          NIN_number,\n          next_of_king,\n          next_of_king_address,\n          phone_no2,\n          plate_number,\n          classes_number,\n          side_number,\n          phone_no3,\n          name_of_company,\n          qrcode,\n        },\n      }\n    )\n    .then((results) => res.json({ success: true, results }))\n    .catch((err) => {\n      console.log(err);\n      res.status(500).json({ success: false });\n    });\n};\n\nmodule.exports.state_and_local_gvt = (req, res) => {\n  // const {  } = req.body;\n  const { type = null, state = null, local_gvt = null } = req.body;\n  const { query_type = \"insert\" } = req.query;\n  db.sequelize\n    .query(`call state_and_local_gvt(:query_type,:type,:state,:local_gvt)`, {\n      replacements: {\n        query_type,\n        type,\n        state,\n        local_gvt,\n      },\n    })\n    .then((results) => res.json({ success: true, results }))\n    .catch((err) => {\n      console.log(err);\n      res.status(500).json({ success: false });\n    });\n};"],"mappings":"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","ignoreList":[]}