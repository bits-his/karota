{"version":3,"file":"user.js","names":["bcrypt","require","jwt","_require","Op","db","User","config","validateRegisterForm","validateLoginForm","module","exports","create","req","res","_validateRegisterForm","body","errors","isValid","_req$body","name","username","account_type","email","phone","password","status","role","json","findAll","where","then","user","length","newUser","genSalt","err","salt","hash","login","_validateLoginForm","_req$body2","_defineProperty2","or","originalPassword","dataValues","compare","isMatch","console","log","_user$0$dataValues","id","payload","sign","process","env","JWT_SECRET_KEY","expiresIn","token","success","findAllUsers","findById","params","userId","msg","update","_req$body3","firstname","lastname","HospitalId","image","deleteUser","destroy","verifyToken","_ref","_asyncToGenerator2","_regenerator","mark","_callee","authToken","decoded","profile","wrap","_callee$","_context","prev","next","headers","startsWith","abrupt","slice","verify","findOne","sent","sequelize","query","concat","t0","error","stop","_x","_x2","apply","arguments"],"sources":["../../src/controllers/user.js"],"sourcesContent":["const bcrypt = require('bcryptjs');\nconst jwt = require('jsonwebtoken');\nconst { Op } = require('sequelize');\nconst db = require('../models');\nconst User = db.User;\nrequire('dotenv').config();\n\n// load input validation\nconst validateRegisterForm = require('../validation/register');\nconst validateLoginForm = require('../validation/login');\n\n// create user\nmodule.exports.create = (req, res) => {\n  const { errors, isValid } = validateRegisterForm(req.body);\n  let {\n    name,\n    username,\n    account_type,\n    email,\n    phone,\n    password,\n    status,\n    role,\n  } = req.body;\n\n  // check validation\n  if (!isValid) {\n    return res.status(400).json(errors);\n  }\n\n  User.findAll({ where: { email } }).then(user => {\n    if (user.length) {\n      return res.status(400).json({ email: 'Email already exists!' });\n    } else {\n      let newUser = {\n        name,\n        username,\n        account_type,\n        email,\n        phone,\n        password,\n        status,\n        role,\n      };\n      bcrypt.genSalt(10, (err, salt) => {\n        bcrypt.hash(newUser.password, salt, (err, hash) => {\n          if (err) throw err;\n          newUser.password = hash;\n          User.create(newUser)\n            .then(user => {\n              res.json({ user });\n            })\n            .catch(err => {\n              res.status(500).json({ err });\n            });\n        });\n      });\n    }\n  });\n};\n\nmodule.exports.login = (req, res) => {\n  const { errors, isValid } = validateLoginForm(req.body);\n\n  // check validation\n  if (!isValid) {\n    return res.status(400).json(errors);\n  }\n\n  const { username, password } = req.body;\n\n  User.findAll({\n    where: {\n      [Op.or]: [\n        { email: username },\n        { phone: username }\n      ]\n    }\n  })\n    .then(user => {\n\n      //check for user\n      if (!user.length) {\n        errors.email = 'User not found!';\n        return res.status(404).json(errors);\n      }\n\n      let originalPassword = user[0].dataValues.password\n\n      //check for password\n      bcrypt\n        .compare(password, originalPassword)\n        .then(isMatch => {\n          if (isMatch) {\n            // user matched\n            console.log('matched!')\n            const { id, username } = user[0].dataValues;\n            const payload = { id, username }; //jwt payload\n            // console.log(payload)\n\n            jwt.sign(payload, process.env.JWT_SECRET_KEY, {\n              expiresIn: 3600\n            }, (err, token) => {\n              res.json({\n                success: true,\n                token: 'Bearer ' + token,\n                role: user[0].dataValues.role\n              });\n            });\n          } else {\n            errors.password = 'Password not correct';\n            return res.status(400).json(errors);\n          }\n        }).catch(err => console.log(err));\n    }).catch(err => res.status(500).json({ err }));\n};\n\n// fetch all users\nmodule.exports.findAllUsers = (req, res) => {\n  User.findAll()\n    .then(user => {\n      res.json({ user });\n    })\n    .catch(err => res.status(500).json({ err }));\n};\n\n// fetch user by userId\nmodule.exports.findById = (req, res) => {\n  const id = req.params.userId;\n\n  User.findAll({ where: { id } })\n    .then(user => {\n      if (!user.length) {\n        return res.json({ msg: 'user not found' })\n      }\n      res.json({ user })\n    })\n    .catch(err => res.status(500).json({ err }));\n};\n\n// update a user's info\nmodule.exports.update = (req, res) => {\n  let { firstname, lastname, HospitalId, role, image } = req.body;\n  const id = req.params.userId;\n\n  User.update(\n    {\n      firstname,\n      lastname,\n      role,\n    },\n    { where: { id } }\n  )\n    .then(user => res.status(200).json({ user }))\n    .catch(err => res.status(500).json({ err }));\n};\n\n// delete a user\nmodule.exports.deleteUser = (req, res) => {\n  const id = req.params.userId;\n\n  User.destroy({ where: { id } })\n    .then(() => res.status.json({ msg: 'User has been deleted successfully!' }))\n    .catch(err => res.status(500).json({ msg: 'Failed to delete!' }));\n};\n\n\nmodule.exports.verifyToken = async function (req, res) {\n  const authToken = req.headers[\"authorization\"];\n\n  if (!authToken || !authToken.startsWith(\"Bearer \")) {\n    return res.status(401).json({\n      success: false,\n      msg: \"Invalid or missing token\",\n    });\n  }\n\n  const token = authToken.slice(7); // Remove \"Bearer \" from the token string\n\n  try {\n    const decoded = jwt.verify(token, process.env.JWT_SECRET_KEY);\n    const { id } = decoded;\n\n    const user = await db.User.findOne({\n      where: {\n        id,\n      },\n    });\n\n    if (!user) {\n      return res.status(404).json({\n        success: false,\n        msg: \"User not found\",\n      });\n    }\n\n    const profile = await db.sequelize.query(\n      `SELECT * FROM ${user.role}s WHERE user_id=${user.id}`\n    );\n\n    res.json({\n      success: true,\n      user,\n      profile: profile[0],\n    });\n  } catch (err) {\n    console.error(err);\n    return res.status(401).json({\n      success: false,\n      msg: \"Failed to authenticate token\",\n    });\n  }\n};\n"],"mappings":"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","ignoreList":[]}