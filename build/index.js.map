{"version":3,"file":"index.js","names":["express","require","passport","bodyParser","cors","models","app","use","json","port","process","env","PORT","__dirname","sequelize","sync","then","console","log","initialize","get","req","res","send","all","status","server","listen","host","address"],"sources":["../src/index.js"],"sourcesContent":["const express = require(\"express\");\nconst passport = require(\"passport\");\nconst bodyParser = require(\"body-parser\");\nconst cors = require(\"cors\");\nconst models = require(\"./models\");\n// const express = require('express');\n// const passport = require('passport');\n// const bodyParser = require('body-parser');\n// const cors = require('cors');\n// const models = require('./models')\n\nconst app = express();\n\napp.use(bodyParser.json());\n\nlet port = process.env.PORT || 44407;\n\n// make express look in the public directory for assets (css/js/img)\napp.use(express.static(__dirname + \"/public\"));\n\napp.use(cors());\n\n// force: true will drop the table if it already exits\n// models.sequelize.sync({ force: true }).then(() => {\nmodels.sequelize.sync().then(() => {\n  console.log(\"Drop and Resync with {force: true}\");\n});\n\n// passport middleware\napp.use(passport.initialize());\n\n// passport config\nrequire(\"./config/passport\")(passport);\n\n//default route\napp.get(\"/\", (req, res) => res.send(\"Hello my World\"));\n\nrequire(\"./routes/user.js\")(app);\nrequire(\"./routes/create_user.js\")(app);\nrequire(\"./routes/incedent.js\")(app);\nrequire(\"./routes/payment.js\")(app);\nrequire(\"./routes/vendors.js\")(app);\nrequire(\"./routes/vehicles_registration.js\")(app);\nrequire(\"./routes/drivers.js\")(app);\nrequire(\"./routes/super_agents.js\")(app);\nrequire(\"./routes/agents.js\")(app);\nrequire(\"./routes/vehicle_owners.js\")(app);\nrequire(\"./routes/vehicle_top_up.js\")(app);\n\n// any routes not specified get sent here\napp.all(\"/*\", function (req, res) {\n  res.status(404).send(\"This route does not exist\");\n});\n\n//create a server\nvar server = app.listen(port, function () {\n  var host = server.address().address;\n  var port = server.address().port;\n\n  console.log(\"App listening at http://%s:%s\", host, port);\n});\n"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,IAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AACpC,IAAME,UAAU,GAAGF,OAAO,CAAC,aAAa,CAAC;AACzC,IAAMG,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC;AAC5B,IAAMI,MAAM,GAAGJ,OAAO,CAAC,UAAU,CAAC;AAClC;AACA;AACA;AACA;AACA;;AAEA,IAAMK,GAAG,GAAGN,OAAO,CAAC,CAAC;AAErBM,GAAG,CAACC,GAAG,CAACJ,UAAU,CAACK,IAAI,CAAC,CAAC,CAAC;AAE1B,IAAIC,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,KAAK;;AAEpC;AACAN,GAAG,CAACC,GAAG,CAACP,OAAO,UAAO,CAACa,SAAS,GAAG,SAAS,CAAC,CAAC;AAE9CP,GAAG,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC;;AAEf;AACA;AACAC,MAAM,CAACS,SAAS,CAACC,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,YAAM;EACjCC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;AACnD,CAAC,CAAC;;AAEF;AACAZ,GAAG,CAACC,GAAG,CAACL,QAAQ,CAACiB,UAAU,CAAC,CAAC,CAAC;;AAE9B;AACAlB,OAAO,CAAC,mBAAmB,CAAC,CAACC,QAAQ,CAAC;;AAEtC;AACAI,GAAG,CAACc,GAAG,CAAC,GAAG,EAAE,UAACC,GAAG,EAAEC,GAAG;EAAA,OAAKA,GAAG,CAACC,IAAI,CAAC,gBAAgB,CAAC;AAAA,EAAC;AAEtDtB,OAAO,CAAC,kBAAkB,CAAC,CAACK,GAAG,CAAC;AAChCL,OAAO,CAAC,yBAAyB,CAAC,CAACK,GAAG,CAAC;AACvCL,OAAO,CAAC,sBAAsB,CAAC,CAACK,GAAG,CAAC;AACpCL,OAAO,CAAC,qBAAqB,CAAC,CAACK,GAAG,CAAC;AACnCL,OAAO,CAAC,qBAAqB,CAAC,CAACK,GAAG,CAAC;AACnCL,OAAO,CAAC,mCAAmC,CAAC,CAACK,GAAG,CAAC;AACjDL,OAAO,CAAC,qBAAqB,CAAC,CAACK,GAAG,CAAC;AACnCL,OAAO,CAAC,0BAA0B,CAAC,CAACK,GAAG,CAAC;AACxCL,OAAO,CAAC,oBAAoB,CAAC,CAACK,GAAG,CAAC;AAClCL,OAAO,CAAC,4BAA4B,CAAC,CAACK,GAAG,CAAC;AAC1CL,OAAO,CAAC,4BAA4B,CAAC,CAACK,GAAG,CAAC;;AAE1C;AACAA,GAAG,CAACkB,GAAG,CAAC,IAAI,EAAE,UAAUH,GAAG,EAAEC,GAAG,EAAE;EAChCA,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACF,IAAI,CAAC,2BAA2B,CAAC;AACnD,CAAC,CAAC;;AAEF;AACA,IAAIG,MAAM,GAAGpB,GAAG,CAACqB,MAAM,CAAClB,IAAI,EAAE,YAAY;EACxC,IAAImB,IAAI,GAAGF,MAAM,CAACG,OAAO,CAAC,CAAC,CAACA,OAAO;EACnC,IAAIpB,IAAI,GAAGiB,MAAM,CAACG,OAAO,CAAC,CAAC,CAACpB,IAAI;EAEhCQ,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEU,IAAI,EAAEnB,IAAI,CAAC;AAC1D,CAAC,CAAC","ignoreList":[]}