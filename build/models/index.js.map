{"version":3,"sources":["../../src/models/index.js"],"names":["fs","require","path","Sequelize","config","basename","__filename","username","process","env","DB_USERNAME","password","DB_PASSWORD","database","DB_NAME","host","DB_HOST","dialect","DB_DIALECT","pool","max","min","acquire","idle","db","sequelize","use_env_variable","readdirSync","__dirname","filter","file","indexOf","slice","forEach","model","join","name","Object","keys","modelName","associate","module","exports"],"mappings":"AAAA;;AAEA,IAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,YAAYF,QAAQ,WAAR,CAAlB;AACAA,QAAQ,QAAR,EAAkBG,MAAlB;;AAEA,IAAMC,WAAWH,KAAKG,QAAL,CAAcC,UAAd,CAAjB;;AAEA,IAAMF,SAAS;AACbG,YAAUC,QAAQC,GAAR,CAAYC,WADT;AAEbC,YAAUH,QAAQC,GAAR,CAAYG,WAFT;AAGbC,YAAUL,QAAQC,GAAR,CAAYK,OAHT;AAIbC,QAAMP,QAAQC,GAAR,CAAYO,OAJL;AAKbC,WAAST,QAAQC,GAAR,CAAYS,UALR;AAMbC,QAAM;AACJC,SAAK,CADD;AAEJC,SAAK,CAFD;AAGJC,aAAS,KAHL;AAIJC,UAAM;AAJF;AANO,CAAf;;AAcA,IAAMC,KAAK,EAAX;;AAEA,IAAIC,kBAAJ;AACA,IAAIrB,OAAOsB,gBAAX,EAA6B;AAC3BD,cAAY,IAAItB,SAAJ,CAAcK,QAAQC,GAAR,CAAYL,OAAOsB,gBAAnB,CAAd,EAAoDtB,MAApD,CAAZ;AACD,CAFD,MAEO;AACLqB,cAAY,IAAItB,SAAJ,CAAcC,OAAOS,QAArB,EAA+BT,OAAOG,QAAtC,EAAgDH,OAAOO,QAAvD,EAAiEP,MAAjE,CAAZ;AACD;;AAEDJ,GACG2B,WADH,CACeC,SADf,EAEGC,MAFH,CAEU,gBAAQ;AACd,SAAQC,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,SAASzB,QAAvC,IAAqDyB,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA/E;AACD,CAJH,EAKGC,OALH,CAKW,gBAAQ;AACf,MAAMC,QAAQT,UAAU,QAAV,EAAoBvB,KAAKiC,IAAL,CAAUP,SAAV,EAAqBE,IAArB,CAApB,CAAd;AACAN,KAAGU,MAAME,IAAT,IAAiBF,KAAjB;AACD,CARH;;AAUAG,OAAOC,IAAP,CAAYd,EAAZ,EAAgBS,OAAhB,CAAwB,qBAAa;AACnC,MAAIT,GAAGe,SAAH,EAAcC,SAAlB,EAA6B;AAC3BhB,OAAGe,SAAH,EAAcC,SAAd,CAAwBhB,EAAxB;AACD;AACF,CAJD;;AAMAA,GAAGC,SAAH,GAAeA,SAAf;AACAD,GAAGrB,SAAH,GAAeA,SAAf;;AAEAsC,OAAOC,OAAP,GAAiBlB,EAAjB","file":"index.js","sourcesContent":["'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst Sequelize = require('sequelize');\nrequire('dotenv').config();\n\nconst basename = path.basename(__filename);\n\nconst config = {\n  username: process.env.DB_USERNAME,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_NAME,\n  host: process.env.DB_HOST,\n  dialect: process.env.DB_DIALECT,\n  pool: {\n    max: 5,\n    min: 0,\n    acquire: 30000,\n    idle: 10000,\n  },\n};\n\nconst db = {};\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs\n  .readdirSync(__dirname)\n  .filter(file => {\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\n  })\n  .forEach(file => {\n    const model = sequelize['import'](path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n"]}