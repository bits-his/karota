{"version":3,"file":"incident.js","names":["db","require","module","exports","create_incident","req","res","_req$body","body","_req$body$id","id","_req$body$user_name","user_name","_req$body$type_of_inc","type_of_incident","_req$body$description","description","_req$query$query_type","query","query_type","sequelize","replacements","then","results","console","log","json","success","err","status","getIncident","_req$query","_req$query$id","_req$query$user_name","_req$query$type_of_in","_req$query$descriptio","_req$query$query_type2"],"sources":["../../src/controllers/incident.js"],"sourcesContent":["const db = require(\"../models\");\nmodule.exports.create_incident = (req, res) => {\n  const {\n    id = null,\n    user_name = null,\n    type_of_incident = null,\n    description = null,\n  } = req.body;\n  const { query_type = \"create\" } = req.query;\n  db.sequelize\n    .query(\n      `call incident(:id,:query_type,:user_name,:type_of_incident,:description)`,\n      {\n        replacements: {\n          id,\n          query_type,\n          user_name,\n          type_of_incident,\n          description,\n        }\n      }\n    )\n    .then((results) => {\n      console.log(results)\n      res.json({ success: true, results })\n    })\n    .catch((err) => {\n      console.log(err);\n      res.status(500).json({ success: false });\n    });\n};\n\nmodule.exports.getIncident = (req, res) => {\n  const {\n    id = null,\n    user_name = null,\n    type_of_incident = null,\n    description = null,\n  } = req.query;\n  const { query_type = \"create\" } = req.query;\n  db.sequelize\n    .query(\n      `call incident(:id,:query_type,:user_name,:type_of_incident,:description)`,\n      {\n        replacements: {\n          id,\n          query_type,\n          user_name,\n          type_of_incident,\n          description,\n        }\n      }\n    )\n    .then((results) => {\n      console.log(results)\n      res.json({ success: true, results })\n    })\n    .catch((err) => {\n      console.log(err);\n      res.status(500).json({ success: false });\n    });\n};"],"mappings":"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","ignoreList":[]}