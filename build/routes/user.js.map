{"version":3,"sources":["../../src/routes/user.js"],"names":["passport","require","config","allowOnly","create","login","findAllUsers","findById","update","deleteUser","verifyToken","module","exports","app","post","get","authenticate","session","accessLevels","admin","put","user","delete"],"mappings":";;AAAA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACA,IAAMC,SAASD,QAAQ,kBAAR,CAAf;;eACsBA,QAAQ,0BAAR,C;IAAdE,S,YAAAA,S;;gBAGJF,QAAQ,qBAAR,C;IAFIG,M,aAAAA,M;IAAQC,K,aAAAA,K;IAAOC,Y,aAAAA,Y;IACrBC,Q,aAAAA,Q;IAAUC,M,aAAAA,M;IAAQC,U,aAAAA,U;IAAYC,W,aAAAA,W;;AAGhCC,OAAOC,OAAP,GAAiB,UAACC,GAAD,EAAS;AACxB;AACAA,MAAIC,IAAJ,CACE,eADF,EACmBV,MADnB;;AAIA;AACAS,MAAIC,IAAJ,CAAS,cAAT,EAAyBT,KAAzB;;AAEA;AACAQ,MAAIE,GAAJ,CACE,QADF,EAEEf,SAASgB,YAAT,CAAsB,KAAtB,EAA6B;AAC3BC,aAAS;AADkB,GAA7B,CAFF,EAKEd,UAAUD,OAAOgB,YAAP,CAAoBC,KAA9B,EAAqCb,YAArC,CALF;;AAQA;AACAO,MAAIE,GAAJ,CACE,gBADF,EAEEf,SAASgB,YAAT,CAAsB,KAAtB,EAA6B;AAC3BC,aAAS;AADkB,GAA7B,CAFF,EAKEV,QALF;;AAQA;AACAM,MAAIO,GAAJ,CACE,gBADF,EAEEpB,SAASgB,YAAT,CAAsB,KAAtB,EAA6B;AAC3BC,aAAS;AADkB,GAA7B,CAFF,EAKEd,UAAUD,OAAOgB,YAAP,CAAoBG,IAA9B,EAAoCb,MAApC,CALF;;AAQA;AACAK,MAAIS,MAAJ,CACE,gBADF,EAEEtB,SAASgB,YAAT,CAAsB,KAAtB,EAA6B;AAC3BC,aAAS;AADkB,GAA7B,CAFF,EAKEd,UAAUD,OAAOgB,YAAP,CAAoBC,KAA9B,EAAqCV,UAArC,CALF;AAOAI,MAAIE,GAAJ,CACE,eADF,EAEEf,SAASgB,YAAT,CAAsB,KAAtB,EAA6B,EAAEC,SAAS,KAAX,EAA7B,CAFF,EAGEP,WAHF;AAKD,CAjDD","file":"user.js","sourcesContent":["const passport = require('passport');\nconst config = require('../config/config');\nconst { allowOnly } = require('../services/routesHelper');\nconst { create, login, findAllUsers,\n  findById, update, deleteUser, verifyToken\n} = require('../controllers/user');\n\nmodule.exports = (app) => {\n  // create a new user\n  app.post(\n    '/users/create', create\n  );\n\n  // user login\n  app.post('/users/login', login);\n\n  //retrieve all users\n  app.get(\n    '/users',\n    passport.authenticate('jwt', {\n      session: false\n    }),\n    allowOnly(config.accessLevels.admin, findAllUsers)\n  );\n\n  // retrieve user by id\n  app.get(\n    '/users/:userId',\n    passport.authenticate('jwt', {\n      session: false,\n    }),\n    findById\n  );\n\n  // update a user with id\n  app.put(\n    '/users/:userId',\n    passport.authenticate('jwt', {\n      session: false,\n    }),\n    allowOnly(config.accessLevels.user, update)\n  );\n\n  // delete a user\n  app.delete(\n    '/users/:userId',\n    passport.authenticate('jwt', {\n      session: false,\n    }),\n    allowOnly(config.accessLevels.admin, deleteUser)\n  );\n  app.get(\n    \"/verify-token\",\n    passport.authenticate(\"jwt\", { session: false }),\n    verifyToken\n  );\n};\n"]}