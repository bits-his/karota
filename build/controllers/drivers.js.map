{"version":3,"file":"drivers.js","names":["db","require","module","exports","registerDriver","_ref","_asyncToGenerator2","_regenerator","mark","_callee","req","res","_req$body","_req$body$query_type","query_type","_req$body$driver_id","driver_id","_req$body$name","name","_req$body$nin","nin","_req$body$phone","phone","_req$body$email","email","_req$body$address","address","_req$body$dob","dob","_req$body$state","state","_req$body$lga","lga","_req$body$next_of_kin","next_of_kin","_req$body$vehicle_id","vehicle_id","resp","wrap","_callee$","_context","prev","next","body","sequelize","query","replacements","sent","status","json","success","results","t0","console","error","stop","_x","_x2","apply","arguments","getAllDriver","_ref2","_callee2","_req$query","_req$query$query_type","_req$query$driver_id","_req$query$name","_req$query$nin","_req$query$phone","_req$query$email","_req$query$address","_req$query$dob","_req$query$state","_req$query$lga","_req$query$next_of_ki","_req$query$vehicle_id","_callee2$","_context2","_x3","_x4"],"sources":["../../src/controllers/drivers.js"],"sourcesContent":["// const bcrypt = require ('bcryptjs';)\nconst db = require('../models');\n\nmodule.exports.registerDriver = async (req, res) => {\n  const {\n    query_type = 'insert',\n    driver_id =null,\n    name=null,\n    nin=null,\n    phone=null,\n    email=null,\n    address=null,\n    dob=null,\n    state=null,\n    lga=null,\n    next_of_kin=null,\n    vehicle_id=null,\n  } = req.body;\n\n  try {\n    const resp = await db.sequelize.query(\n      `CALL drivers(:query_type, \n        :driver_id, \n        :name,\n            :nin,\n            :phone,\n            :email,\n            :address,\n            :dob,\n            :state,\n            :lga,\n           \t:next_of_kin,\n            :vehicle_id)`,\n      {\n        replacements: {\n          query_type,\n          driver_id,\n          name,\n          nin,\n          phone,\n          email,\n          address,\n          dob,\n          state,\n          lga,\n          next_of_kin,\n          vehicle_id\n        }\n      }\n    );\n\n    res.status(200).json({ success: true, results: resp });\n  } catch (err) {\n    console.error(err);\n    res.status(500).json({ success: false, error: 'Failed to register vehicle' });\n  }\n};\n\n//  @ Get all vendors\n//  @route GET /vendors \nmodule.exports.getAllDriver = async (req, res) => {\n  const {\n    query_type = 'select',\n    driver_id =null,\n    name=null,\n    nin=null,\n    phone=null,\n    email=null,\n    address=null,\n    dob=null,\n    state=null,\n    lga=null,\n    next_of_kin=null,\n    vehicle_id=null,\n  } = req.query;\n\n  try {\n    const resp = await db.sequelize.query(\n      `CALL drivers(:query_type, \n        :driver_id, \n        :name,\n            :nin,\n            :phone,\n            :email,\n            :address,\n            :dob,\n            :state,\n            :lga,\n           \t:next_of_kin,\n            :vehicle_id)`,\n      {\n        replacements: {\n          query_type,\n          driver_id,\n          name,\n          nin,\n          phone,\n          email,\n          address,\n          dob,\n          state,\n          lga,\n          next_of_kin,\n          vehicle_id\n        }\n      }\n    );\n\n    res.status(200).json({ success: true, results: resp });\n  } catch (err) {\n    console.error(err);\n    res.status(500).json({ success: false, error: 'Failed to fetch vehicle' });\n  }\n};\n\n\n// };\n\n\n"],"mappings":";;;;;AAAA;AACA,IAAMA,EAAE,GAAGC,OAAO,CAAC,WAAW,CAAC;AAE/BC,MAAM,CAACC,OAAO,CAACC,cAAc;EAAA,IAAAC,IAAA,OAAAC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAG,SAAAC,QAAOC,GAAG,EAAEC,GAAG;IAAA,IAAAC,SAAA,EAAAC,oBAAA,EAAAC,UAAA,EAAAC,mBAAA,EAAAC,SAAA,EAAAC,cAAA,EAAAC,IAAA,EAAAC,aAAA,EAAAC,GAAA,EAAAC,eAAA,EAAAC,KAAA,EAAAC,eAAA,EAAAC,KAAA,EAAAC,iBAAA,EAAAC,OAAA,EAAAC,aAAA,EAAAC,GAAA,EAAAC,eAAA,EAAAC,KAAA,EAAAC,aAAA,EAAAC,GAAA,EAAAC,qBAAA,EAAAC,WAAA,EAAAC,oBAAA,EAAAC,UAAA,EAAAC,IAAA;IAAA,OAAA9B,YAAA,YAAA+B,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAA9B,SAAA,GAczCF,GAAG,CAACiC,IAAI,EAAA9B,oBAAA,GAAAD,SAAA,CAZVE,UAAU,EAAVA,UAAU,GAAAD,oBAAA,cAAG,QAAQ,GAAAA,oBAAA,EAAAE,mBAAA,GAAAH,SAAA,CACrBI,SAAS,EAATA,SAAS,GAAAD,mBAAA,cAAE,IAAI,GAAAA,mBAAA,EAAAE,cAAA,GAAAL,SAAA,CACfM,IAAI,EAAJA,IAAI,GAAAD,cAAA,cAAC,IAAI,GAAAA,cAAA,EAAAE,aAAA,GAAAP,SAAA,CACTQ,GAAG,EAAHA,GAAG,GAAAD,aAAA,cAAC,IAAI,GAAAA,aAAA,EAAAE,eAAA,GAAAT,SAAA,CACRU,KAAK,EAALA,KAAK,GAAAD,eAAA,cAAC,IAAI,GAAAA,eAAA,EAAAE,eAAA,GAAAX,SAAA,CACVY,KAAK,EAALA,KAAK,GAAAD,eAAA,cAAC,IAAI,GAAAA,eAAA,EAAAE,iBAAA,GAAAb,SAAA,CACVc,OAAO,EAAPA,OAAO,GAAAD,iBAAA,cAAC,IAAI,GAAAA,iBAAA,EAAAE,aAAA,GAAAf,SAAA,CACZgB,GAAG,EAAHA,GAAG,GAAAD,aAAA,cAAC,IAAI,GAAAA,aAAA,EAAAE,eAAA,GAAAjB,SAAA,CACRkB,KAAK,EAALA,KAAK,GAAAD,eAAA,cAAC,IAAI,GAAAA,eAAA,EAAAE,aAAA,GAAAnB,SAAA,CACVoB,GAAG,EAAHA,GAAG,GAAAD,aAAA,cAAC,IAAI,GAAAA,aAAA,EAAAE,qBAAA,GAAArB,SAAA,CACRsB,WAAW,EAAXA,WAAW,GAAAD,qBAAA,cAAC,IAAI,GAAAA,qBAAA,EAAAE,oBAAA,GAAAvB,SAAA,CAChBwB,UAAU,EAAVA,UAAU,GAAAD,oBAAA,cAAC,IAAI,GAAAA,oBAAA;UAAAK,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAE,IAAA;UAAA,OAII1C,EAAE,CAAC4C,SAAS,CAACC,KAAK,0QAanC;YACEC,YAAY,EAAE;cACZhC,UAAU,EAAVA,UAAU;cACVE,SAAS,EAATA,SAAS;cACTE,IAAI,EAAJA,IAAI;cACJE,GAAG,EAAHA,GAAG;cACHE,KAAK,EAALA,KAAK;cACLE,KAAK,EAALA,KAAK;cACLE,OAAO,EAAPA,OAAO;cACPE,GAAG,EAAHA,GAAG;cACHE,KAAK,EAALA,KAAK;cACLE,GAAG,EAAHA,GAAG;cACHE,WAAW,EAAXA,WAAW;cACXE,UAAU,EAAVA;YACF;UACF,CACF,CAAC;QAAA;UA7BKC,IAAI,GAAAG,QAAA,CAAAO,IAAA;UA+BVpC,GAAG,CAACqC,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YAAEC,OAAO,EAAE,IAAI;YAAEC,OAAO,EAAEd;UAAK,CAAC,CAAC;UAACG,QAAA,CAAAE,IAAA;UAAA;QAAA;UAAAF,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAY,EAAA,GAAAZ,QAAA;UAEvDa,OAAO,CAACC,KAAK,CAAAd,QAAA,CAAAY,EAAI,CAAC;UAClBzC,GAAG,CAACqC,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YAAEC,OAAO,EAAE,KAAK;YAAEI,KAAK,EAAE;UAA6B,CAAC,CAAC;QAAC;QAAA;UAAA,OAAAd,QAAA,CAAAe,IAAA;MAAA;IAAA,GAAA9C,OAAA;EAAA,CAEjF;EAAA,iBAAA+C,EAAA,EAAAC,GAAA;IAAA,OAAApD,IAAA,CAAAqD,KAAA,OAAAC,SAAA;EAAA;AAAA;;AAED;AACA;AACAzD,MAAM,CAACC,OAAO,CAACyD,YAAY;EAAA,IAAAC,KAAA,OAAAvD,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAG,SAAAsD,SAAOpD,GAAG,EAAEC,GAAG;IAAA,IAAAoD,UAAA,EAAAC,qBAAA,EAAAlD,UAAA,EAAAmD,oBAAA,EAAAjD,SAAA,EAAAkD,eAAA,EAAAhD,IAAA,EAAAiD,cAAA,EAAA/C,GAAA,EAAAgD,gBAAA,EAAA9C,KAAA,EAAA+C,gBAAA,EAAA7C,KAAA,EAAA8C,kBAAA,EAAA5C,OAAA,EAAA6C,cAAA,EAAA3C,GAAA,EAAA4C,gBAAA,EAAA1C,KAAA,EAAA2C,cAAA,EAAAzC,GAAA,EAAA0C,qBAAA,EAAAxC,WAAA,EAAAyC,qBAAA,EAAAvC,UAAA,EAAAC,IAAA;IAAA,OAAA9B,YAAA,YAAA+B,IAAA,UAAAsC,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAApC,IAAA,GAAAoC,SAAA,CAAAnC,IAAA;QAAA;UAAAqB,UAAA,GAcvCrD,GAAG,CAACmC,KAAK,EAAAmB,qBAAA,GAAAD,UAAA,CAZXjD,UAAU,EAAVA,UAAU,GAAAkD,qBAAA,cAAG,QAAQ,GAAAA,qBAAA,EAAAC,oBAAA,GAAAF,UAAA,CACrB/C,SAAS,EAATA,SAAS,GAAAiD,oBAAA,cAAE,IAAI,GAAAA,oBAAA,EAAAC,eAAA,GAAAH,UAAA,CACf7C,IAAI,EAAJA,IAAI,GAAAgD,eAAA,cAAC,IAAI,GAAAA,eAAA,EAAAC,cAAA,GAAAJ,UAAA,CACT3C,GAAG,EAAHA,GAAG,GAAA+C,cAAA,cAAC,IAAI,GAAAA,cAAA,EAAAC,gBAAA,GAAAL,UAAA,CACRzC,KAAK,EAALA,KAAK,GAAA8C,gBAAA,cAAC,IAAI,GAAAA,gBAAA,EAAAC,gBAAA,GAAAN,UAAA,CACVvC,KAAK,EAALA,KAAK,GAAA6C,gBAAA,cAAC,IAAI,GAAAA,gBAAA,EAAAC,kBAAA,GAAAP,UAAA,CACVrC,OAAO,EAAPA,OAAO,GAAA4C,kBAAA,cAAC,IAAI,GAAAA,kBAAA,EAAAC,cAAA,GAAAR,UAAA,CACZnC,GAAG,EAAHA,GAAG,GAAA2C,cAAA,cAAC,IAAI,GAAAA,cAAA,EAAAC,gBAAA,GAAAT,UAAA,CACRjC,KAAK,EAALA,KAAK,GAAA0C,gBAAA,cAAC,IAAI,GAAAA,gBAAA,EAAAC,cAAA,GAAAV,UAAA,CACV/B,GAAG,EAAHA,GAAG,GAAAyC,cAAA,cAAC,IAAI,GAAAA,cAAA,EAAAC,qBAAA,GAAAX,UAAA,CACR7B,WAAW,EAAXA,WAAW,GAAAwC,qBAAA,cAAC,IAAI,GAAAA,qBAAA,EAAAC,qBAAA,GAAAZ,UAAA,CAChB3B,UAAU,EAAVA,UAAU,GAAAuC,qBAAA,cAAC,IAAI,GAAAA,qBAAA;UAAAE,SAAA,CAAApC,IAAA;UAAAoC,SAAA,CAAAnC,IAAA;UAAA,OAII1C,EAAE,CAAC4C,SAAS,CAACC,KAAK,0QAanC;YACEC,YAAY,EAAE;cACZhC,UAAU,EAAVA,UAAU;cACVE,SAAS,EAATA,SAAS;cACTE,IAAI,EAAJA,IAAI;cACJE,GAAG,EAAHA,GAAG;cACHE,KAAK,EAALA,KAAK;cACLE,KAAK,EAALA,KAAK;cACLE,OAAO,EAAPA,OAAO;cACPE,GAAG,EAAHA,GAAG;cACHE,KAAK,EAALA,KAAK;cACLE,GAAG,EAAHA,GAAG;cACHE,WAAW,EAAXA,WAAW;cACXE,UAAU,EAAVA;YACF;UACF,CACF,CAAC;QAAA;UA7BKC,IAAI,GAAAwC,SAAA,CAAA9B,IAAA;UA+BVpC,GAAG,CAACqC,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YAAEC,OAAO,EAAE,IAAI;YAAEC,OAAO,EAAEd;UAAK,CAAC,CAAC;UAACwC,SAAA,CAAAnC,IAAA;UAAA;QAAA;UAAAmC,SAAA,CAAApC,IAAA;UAAAoC,SAAA,CAAAzB,EAAA,GAAAyB,SAAA;UAEvDxB,OAAO,CAACC,KAAK,CAAAuB,SAAA,CAAAzB,EAAI,CAAC;UAClBzC,GAAG,CAACqC,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;YAAEC,OAAO,EAAE,KAAK;YAAEI,KAAK,EAAE;UAA0B,CAAC,CAAC;QAAC;QAAA;UAAA,OAAAuB,SAAA,CAAAtB,IAAA;MAAA;IAAA,GAAAO,QAAA;EAAA,CAE9E;EAAA,iBAAAgB,GAAA,EAAAC,GAAA;IAAA,OAAAlB,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA;;AAGD","ignoreList":[]}